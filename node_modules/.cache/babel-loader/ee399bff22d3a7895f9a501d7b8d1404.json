{"ast":null,"code":"var _jsxFileName = \"/home/notebook/Projects/projetoc/src/components/body/Products.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BodyProducts = _ref => {\n  let {\n    categoria,\n    setTotalPrice,\n    setCount,\n    count\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"SubProducts\",\n    children: categoria === null || categoria === void 0 ? void 0 : categoria.produtos.map((produto, index) => {\n      const decreasePrice = () => {\n        setTotalPrice(prev_state => prev_state - produto.price);\n      };\n\n      const increasePrice = () => {\n        setTotalPrice(prev_state => prev_state + produto.price);\n      };\n\n      const increaseQty = () => {\n        setCount(prev => ({ ...prev,\n          [produto.id]: prev[produto.id].qtd + 1\n        }));\n      };\n\n      const decreaseQty = () => {\n        /*console.log(count);\n        console.log({ ...count, 1: \"Bartho\" }, \"spread operator\");\n        console.log(produto.id);\n        console.log(categoria.id);*/\n        // ...(spread operator) espalha o elemento (nesse caso, count recebe 1:0, 2:0, 3:0, 4:0), e envia um novo valor para uma dessas propriedades\n        setCount(prev => ({ ...prev,\n          [produto.id]: prev[produto.id].qtd - 1\n        }));\n      };\n\n      const decrease = () => {\n        decreasePrice();\n        decreaseQty();\n      };\n\n      const increase = () => {\n        increasePrice();\n        increaseQty();\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"subProduto\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"subNome\",\n          children: produto.nome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"adder\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"adtake\",\n            onClick: decrease,\n            disabled: count[produto.id] === 0,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: count[produto.id].qtd\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"adtake\",\n            onClick: increase,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BodyProducts;\nexport default BodyProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyProducts\");","map":{"version":3,"sources":["/home/notebook/Projects/projetoc/src/components/body/Products.js"],"names":["React","BodyProducts","categoria","setTotalPrice","setCount","count","produtos","map","produto","index","decreasePrice","prev_state","price","increasePrice","increaseQty","prev","id","qtd","decreaseQty","decrease","increase","nome"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAY,GAAG,QAAmD;AAAA,MAAlD;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,aAAb;AAA4BC,IAAAA,QAA5B;AAAsCC,IAAAA;AAAtC,GAAkD;AACtE,sBACE;AAAK,IAAA,KAAK,EAAC,aAAX;AAAA,cACGH,SADH,aACGA,SADH,uBACGA,SAAS,CAAEI,QAAX,CAAoBC,GAApB,CAAwB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC3C,YAAMC,aAAa,GAAG,MAAM;AAC1BP,QAAAA,aAAa,CAAEQ,UAAD,IAAgBA,UAAU,GAAGH,OAAO,CAACI,KAAtC,CAAb;AACD,OAFD;;AAIA,YAAMC,aAAa,GAAG,MAAM;AAC1BV,QAAAA,aAAa,CAAEQ,UAAD,IAAgBA,UAAU,GAAGH,OAAO,CAACI,KAAtC,CAAb;AACD,OAFD;;AAIA,YAAME,WAAW,GAAG,MAAM;AACxBV,QAAAA,QAAQ,CAAEW,IAAD,KAAW,EAClB,GAAGA,IADe;AAElB,WAACP,OAAO,CAACQ,EAAT,GAAcD,IAAI,CAACP,OAAO,CAACQ,EAAT,CAAJ,CAAiBC,GAAjB,GAAuB;AAFnB,SAAX,CAAD,CAAR;AAID,OALD;;AAMA,YAAMC,WAAW,GAAG,MAAM;AACxB;AACV;AACA;AACA;AACU;AACAd,QAAAA,QAAQ,CAAEW,IAAD,KAAW,EAClB,GAAGA,IADe;AAElB,WAACP,OAAO,CAACQ,EAAT,GAAcD,IAAI,CAACP,OAAO,CAACQ,EAAT,CAAJ,CAAiBC,GAAjB,GAAuB;AAFnB,SAAX,CAAD,CAAR;AAID,OAVD;;AAYA,YAAME,QAAQ,GAAG,MAAM;AACrBT,QAAAA,aAAa;AACbQ,QAAAA,WAAW;AACZ,OAHD;;AAKA,YAAME,QAAQ,GAAG,MAAM;AACrBP,QAAAA,aAAa;AACbC,QAAAA,WAAW;AACZ,OAHD;;AAKA,0BACE;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA,gCACE;AAAG,UAAA,KAAK,EAAC,SAAT;AAAA,oBAAoBN,OAAO,CAACa;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,KAAK,EAAC,OAAX;AAAA,kCACE;AACE,YAAA,KAAK,EAAC,QADR;AAEE,YAAA,OAAO,EAAEF,QAFX;AAGE,YAAA,QAAQ,EAAEd,KAAK,CAACG,OAAO,CAACQ,EAAT,CAAL,KAAsB,CAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA,sBAAMX,KAAK,CAACG,OAAO,CAACQ,EAAT,CAAL,CAAkBC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBARF,eASE;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAuB,YAAA,OAAO,EAAEG,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAkBD,KAvDA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA4DD,CA7DD;;KAAMnB,Y;AA+DN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\n\nconst BodyProducts = ({ categoria, setTotalPrice, setCount, count }) => {\n  return (\n    <div class=\"SubProducts\">\n      {categoria?.produtos.map((produto, index) => {\n        const decreasePrice = () => {\n          setTotalPrice((prev_state) => prev_state - produto.price);\n        };\n\n        const increasePrice = () => {\n          setTotalPrice((prev_state) => prev_state + produto.price);\n        };\n\n        const increaseQty = () => {\n          setCount((prev) => ({\n            ...prev,\n            [produto.id]: prev[produto.id].qtd + 1,\n          }));\n        };\n        const decreaseQty = () => {\n          /*console.log(count);\n          console.log({ ...count, 1: \"Bartho\" }, \"spread operator\");\n          console.log(produto.id);\n          console.log(categoria.id);*/\n          // ...(spread operator) espalha o elemento (nesse caso, count recebe 1:0, 2:0, 3:0, 4:0), e envia um novo valor para uma dessas propriedades\n          setCount((prev) => ({\n            ...prev,\n            [produto.id]: prev[produto.id].qtd - 1,\n          }));\n        };\n\n        const decrease = () => {\n          decreasePrice();\n          decreaseQty();\n        };\n\n        const increase = () => {\n          increasePrice();\n          increaseQty();\n        };\n\n        return (\n          <div class=\"subProduto\">\n            <p class=\"subNome\">{produto.nome}</p>\n            <div class=\"adder\">\n              <button\n                class=\"adtake\"\n                onClick={decrease}\n                disabled={count[produto.id] === 0}\n              >\n                -\n              </button>\n              <div>{count[produto.id].qtd}</div>\n              <button class=\"adtake\" onClick={increase}>\n                +\n              </button>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default BodyProducts;\n"]},"metadata":{},"sourceType":"module"}