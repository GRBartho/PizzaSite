{"ast":null,"code":"var _jsxFileName = \"/home/notebook/Projects/projetoc/src/components/body/Products.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BodyProducts = _ref => {\n  let {\n    categoria,\n    setTotalPrice,\n    setCount,\n    count\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"SubProducts\",\n    children: categoria === null || categoria === void 0 ? void 0 : categoria.produtos.map((produto, index) => {\n      var result = count.map(prodId => ({\n        prod_id: prodId.prod_id,\n        cat_id: prodId.cat_id,\n        qtd: prodId.qtd\n      }));\n      console.log(produto.id[3]);\n      var productId = result.map(produtoID => {\n        return produtoID.prod_id;\n      });\n      var categoryId = result.map(categoriaID => {\n        return categoriaID.cat_id;\n      });\n      var quantity = result.map(quantidade => {\n        return quantidade.qtd;\n      });\n\n      const decreasePrice = () => {\n        setTotalPrice(prev_state => prev_state - produto.price);\n      };\n\n      const increasePrice = () => {\n        setTotalPrice(prev_state => prev_state + produto.price);\n      };\n\n      const increaseQty = () => {\n        for (let i = 0; i < result.length; i++) {\n          if (productId[i] === produto.id - 1 && categoryId[i] === categoria.id - 1) {\n            setCount(count[produto.id].qtd + 1);\n          }\n        }\n      };\n\n      const decreaseQty = () => {};\n\n      const decrease = () => {\n        decreasePrice();\n        decreaseQty();\n      };\n\n      const increase = () => {\n        increasePrice();\n        increaseQty();\n        console.log(produto.id, categoria.id, produto.nome, productId, categoryId, quantity);\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"subProduto\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"subNome\",\n          children: produto.nome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"adder\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"adtake\",\n            onClick: () => decrease(produto.id, categoria.id),\n            disabled: count[produto.id].qtd === 0,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: count[produto.id].qtd\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"adtake\",\n            onClick: increase,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BodyProducts;\nexport default BodyProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyProducts\");","map":{"version":3,"sources":["/home/notebook/Projects/projetoc/src/components/body/Products.js"],"names":["React","BodyProducts","categoria","setTotalPrice","setCount","count","produtos","map","produto","index","result","prodId","prod_id","cat_id","qtd","console","log","id","productId","produtoID","categoryId","categoriaID","quantity","quantidade","decreasePrice","prev_state","price","increasePrice","increaseQty","i","length","decreaseQty","decrease","increase","nome"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst BodyProducts = ({ categoria, setTotalPrice, setCount, count }) => {\n  return (\n    <div class=\"SubProducts\">\n      {categoria?.produtos.map((produto, index) => {\n        var result = count.map((prodId) => ({\n          prod_id: prodId.prod_id,\n          cat_id: prodId.cat_id,\n          qtd: prodId.qtd,\n        }));\n\n        console.log(produto.id[3]);\n\n        var productId = result.map((produtoID) => {\n          return produtoID.prod_id;\n        });\n\n        var categoryId = result.map((categoriaID) => {\n          return categoriaID.cat_id;\n        });\n\n        var quantity = result.map((quantidade) => {\n          return quantidade.qtd;\n        });\n\n        const decreasePrice = () => {\n          setTotalPrice((prev_state) => prev_state - produto.price);\n        };\n\n        const increasePrice = () => {\n          setTotalPrice((prev_state) => prev_state + produto.price);\n        };\n\n        const increaseQty = () => {\n          for (let i = 0; i < result.length; i++) {\n            if (\n              productId[i] === produto.id - 1 &&\n              categoryId[i] === categoria.id - 1\n            ) {\n              setCount(count[produto.id].qtd + 1);\n            }\n          }\n        };\n\n        const decreaseQty = () => {};\n\n        const decrease = () => {\n          decreasePrice();\n          decreaseQty();\n        };\n\n        const increase = () => {\n          increasePrice();\n          increaseQty();\n          console.log(\n            produto.id,\n            categoria.id,\n            produto.nome,\n            productId,\n            categoryId,\n            quantity\n          );\n        };\n\n        return (\n          <div class=\"subProduto\">\n            <p class=\"subNome\">{produto.nome}</p>\n            <div class=\"adder\">\n              <button\n                class=\"adtake\"\n                onClick={() => decrease(produto.id, categoria.id)}\n                disabled={count[produto.id].qtd === 0}\n              >\n                -\n              </button>\n              <div>{count[produto.id].qtd}</div>\n              <button class=\"adtake\" onClick={increase}>\n                +\n              </button>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default BodyProducts;\n"]},"metadata":{},"sourceType":"module"}