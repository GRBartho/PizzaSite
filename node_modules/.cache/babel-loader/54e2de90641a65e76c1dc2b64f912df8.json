{"ast":null,"code":"var _jsxFileName = \"/home/notebook/Projects/projetoc/src/components/body/Products.js\";\nimport React from \"react\";\nimport { ReactDOM } from \"react\";\nimport BodyCategories from \"./Categories\";\nimport Total from \"../footer/Total\";\nimport App from \"../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BodyProducts = _ref => {\n  let {\n    categoria,\n    setTotalPrice,\n    setCount,\n    count\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"SubProducts\",\n    children: categoria === null || categoria === void 0 ? void 0 : categoria.produtos.map((produto, index) => {\n      const decreasePrice = () => {\n        setTotalPrice(prev_state => prev_state - produto.price);\n      };\n\n      const increasePrice = () => {\n        setTotalPrice(prev_state => prev_state + produto.price);\n      };\n\n      const increaseQty = () => {\n        setCount(prev => ({ ...prev,\n          [produto.id]: prev[produto.id] + 1\n        }));\n      };\n\n      const decreaseQty = () => {\n        /*console.log(count);\n        console.log({ ...count, 1: \"Bartho\" }, \"spread operator\");\n        console.log(produto.id);\n        console.log(categoria.id);*/\n        // ...(spread operator) espalha o elemento (nesse caso, count recebe 1:0, 2:0, 3:0, 4:0), e envia um novo valor para uma dessas propriedades\n        console.log(categoria.id, produto.id);\n        {\n          setCount(prev => (({ ...prev,\n            [produto.id]: prev[produto.id] - 1\n          }), console.log(prev)));\n        }\n      };\n\n      const decrease = () => {\n        decreasePrice();\n        decreaseQty();\n      };\n\n      const increase = () => {\n        increasePrice();\n        increaseQty();\n      };\n\n      if (count[produto.id] <= 0) {\n        count[produto.id] = 0;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subProduto\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subNome\",\n          children: produto.nome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"adder\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"adtake\",\n            onClick: decrease,\n            disabled: count.map(obj => obj.prod_id) === 0,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: count.map(obj => obj.prod.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"adtake\",\n            onClick: increase,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BodyProducts;\nexport default BodyProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"BodyProducts\");","map":{"version":3,"sources":["/home/notebook/Projects/projetoc/src/components/body/Products.js"],"names":["React","ReactDOM","BodyCategories","Total","App","BodyProducts","categoria","setTotalPrice","setCount","count","produtos","map","produto","index","decreasePrice","prev_state","price","increasePrice","increaseQty","prev","id","decreaseQty","console","log","decrease","increase","nome","obj","prod_id","prod"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ReactDOM } from \"react\";\nimport BodyCategories from \"./Categories\";\nimport Total from \"../footer/Total\";\nimport App from \"../../App\";\n\nconst BodyProducts = ({ categoria, setTotalPrice, setCount, count }) => {\n  return (\n    <div class=\"SubProducts\">\n      {categoria?.produtos.map((produto, index) => {\n        const decreasePrice = () => {\n          setTotalPrice((prev_state) => prev_state - produto.price);\n        };\n\n        const increasePrice = () => {\n          setTotalPrice((prev_state) => prev_state + produto.price);\n        };\n\n        const increaseQty = () => {\n          setCount((prev) => ({\n            ...prev,\n            [produto.id]: prev[produto.id] + 1,\n          }));\n        };\n        const decreaseQty = () => {\n          /*console.log(count);\n          console.log({ ...count, 1: \"Bartho\" }, \"spread operator\");\n          console.log(produto.id);\n          console.log(categoria.id);*/\n          // ...(spread operator) espalha o elemento (nesse caso, count recebe 1:0, 2:0, 3:0, 4:0), e envia um novo valor para uma dessas propriedades\n          console.log(categoria.id, produto.id);\n          {\n            setCount(\n              (prev) => (\n                {\n                  ...prev,\n                  [produto.id]: prev[produto.id] - 1,\n                },\n                console.log(prev)\n              )\n            );\n          }\n        };\n\n        const decrease = () => {\n          decreasePrice();\n          decreaseQty();\n        };\n\n        const increase = () => {\n          increasePrice();\n          increaseQty();\n        };\n\n        if (count[produto.id] <= 0) {\n          count[produto.id] = 0;\n        }\n\n        return (\n          <div className=\"subProduto\">\n            <p className=\"subNome\">{produto.nome}</p>\n            <div className=\"adder\">\n              <button\n                className=\"adtake\"\n                onClick={decrease}\n                disabled={count.map((obj) => obj.prod_id) === 0}\n              >\n                -\n              </button>\n              <div>{count.map((obj) => obj.prod.id)}</div>\n              <button className=\"adtake\" onClick={increase}>\n                +\n              </button>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default BodyProducts;\n"]},"metadata":{},"sourceType":"module"}